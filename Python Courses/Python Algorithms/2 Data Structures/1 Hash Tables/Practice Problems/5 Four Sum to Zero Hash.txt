'''
Use a Hash Table to solve this problem. Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero.

To make problem a bit easier, all A, B, C, D have same length of N where 0 = N = 500. All integers are in the range of -228 to 228 - 1 and the result is guaranteed to be at most 231 - 1.

Example:

Input:
A = [ 1, 2]
B = [-2,-1]
C = [-1, 2]
D = [ 0, 2]

Output:
2

Explanation:
The two tuples are:
1. (0, 0, 0, 1) -> A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0
2. (1, 1, 0, 0) -> A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0
'''

A = [ 0, 2]
B = [-1,-1]
C = [1, 0]
D = [0, 1]

ht = dict()

for i in range(len(A)):
  for j in range(len(B)):
    if A[i] + B[j] in ht:
      ht[A[i] + B[j]] += 1
    else:
      ht[A[i] + B[j]] = 1

count = 0

for i in range(len(C)):
  for j in range(len(D)):
    target = -1*(C[i] + D[j])
    if target in ht:
      count+=ht[target]

print(count)