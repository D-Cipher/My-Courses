Tree Traversal

1) In-order traversal -> left, root, right
       10
      /  \
     20   12
    /  \
   3    8
- In-order: 3,20,8,10,12

2) Pre-order traversal -> root, left, right 
- Pre-order: 10,20,3,8,12

3) Post-order traversal -> left, right, root
- Post-order: 3,8,20,12,10

```
class Node:
  def __init__(self,value):
    self.left = None
    self.right = None
    self.data = value
  def __str__(self):
    return str(self.data)

def inorder(node):
  if node != None:
    inorder(node.left)
    print(node.data)
    inorder(node.right)

def preorder(node):
  if node != None:
    print(node.data)
    preorder(node.left)
    preorder(node.right)

def postorder(node):
  if node != None:
    postorder(node.left)
    postorder(node.right)
    print(node.data)

root = Node(4);
root.left = Node(5);
root.right = Node(6);
root.left.left = Node(7);

inorder(root) #7,5,4,6
preorder(root) #4,5,7,6
postorder(root) #7,5,6,4

'''
     4
    / \
   5   6
  /
 7
'''
```