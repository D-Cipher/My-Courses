'''
Longest Substring Without Repeating Characters

Given a string, find the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: "abc"
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: "b"
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: "wke"
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
'''

letters = "abcabcbb"

arr = list(letters)
print(arr)

strt = 0
end = 1
queue = arr[strt]
longest = ''

while strt <= end:
  if end > len(arr) - 1:
    break

  if arr[end] not in queue:
    queue += arr[end]
    end += 1
  else:
    if len(queue) > len(longest):
      longest = queue
    queue = arr[end]
    start = end
    end += 1

print(longest)

