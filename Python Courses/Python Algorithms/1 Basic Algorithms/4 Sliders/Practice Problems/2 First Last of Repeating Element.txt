'''
Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

Your algorithm runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:

Input: nums = [6,7,7,7,8,9], target = 7
Output: [1,3]
'''

import math

arr = [1,2,5,7,7,8,8,8]
target = 8

strt = 0
end = len(arr) - 1

while strt <= end:
  mid = math.floor(strt+(end-strt)/2)
  if arr[mid] > target:
    end = mid
  elif arr[mid] < target:
    strt = mid + 1
  else:
    break

farleft = mid
farright = mid

left = mid - 1
right = mid + 1

if left >= 0:
  while arr[left] == target:
    farleft = left
    left -= 1
    if left < 0:
      break

if right <= len(arr)-1:
  while arr[right] == target:
    farright = right
    right += 1
    if right > len(arr)-1:
      break

print(farleft)
print(farright)
