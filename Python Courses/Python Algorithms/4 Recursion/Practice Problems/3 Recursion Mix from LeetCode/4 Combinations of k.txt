'''LeetCode #77 Combinations
Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

Input: n = 4, k = 2
Output:[[2,4],[3,4],[2,3],[1,2],[1,3],[1,4]]
'''

n = 4
k = 2

def dfs(n,k,nums=None,ans=[],cur=[],index=0):
  if nums == None: nums = [num + 1 for num in range(n)]

  for i in range(index,len(nums)):
    if len(cur + [nums[i]]) <= k and nums[i] not in cur:
      ncur = cur + [nums[i]]
      if ncur not in ans and len(ncur) == k:
        ans.append(ncur)
      dfs(n,k,nums,ans,ncur,i)

  return ans
  
print(dfs(n,k))
