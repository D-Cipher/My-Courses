'''60. Permutation Sequence
The set [1,2,3,...,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order, we get the following sequence for n = 3: "123", "132", "213", "231", "312", "321"
Given n and k, return the kth permutation sequence.
Given n will be between 1 and 9 inclusive.
Given k will be between 1 and n! inclusive.

Input: n = 3, k = 3
Output: "213"

Input: n = 4, k = 9
Output: "2314"
'''

n = 4
k = 9

def dfs(n,nums=None,ans=[],cur=''):
  if nums==None: nums = ''.join([str(num+1) for num in range(n)])

  for i in range(len(nums)):
    if (cur+nums[i]).count(nums[i]) <= nums.count(nums[i]):
      ncur = cur + nums[i]
      if len(ncur) == len(nums) and ncur not in ans:
        ans.append(ncur)
      dfs(n,nums,ans,ncur)

  return ans

dfs(n).sort()

print(dfs(n)[k-1])

