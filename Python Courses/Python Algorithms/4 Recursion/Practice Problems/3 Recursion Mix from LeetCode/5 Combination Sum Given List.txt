'''LeetCode #40 Combination Sum II
Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.

Each number in candidates may only be used once in the combination.

Note:

All numbers (including target) will be positive integers.
The solution set must not contain duplicate combinations.

Input: candidates = [10,1,2,7,6,1,5], target = 8,
A solution set is:
[[1, 7],[1, 2, 5],[2, 6],[1, 1, 6]]

Input: candidates = [2,5,2,1,2], target = 5,
A solution set is:
[[1,2,2],[5]]

'''

nums = [10,1,2,7,6,1,5]
k = 8

def dfs(nums,k,ans=[],cur=[],index=0):
  for i in range(index,len(nums)):
    if (cur + [nums[i]]).count(nums[i]) <= nums.count(nums[i]) and sum(cur + [nums[i]]) <= k:
      ncur = cur + [nums[i]]
      ncur.sort()
      if sum(ncur) == k and ncur not in ans:
        ans.append(ncur)
      dfs(nums,k,ans,ncur,i)
  return ans

print(dfs(nums,k))