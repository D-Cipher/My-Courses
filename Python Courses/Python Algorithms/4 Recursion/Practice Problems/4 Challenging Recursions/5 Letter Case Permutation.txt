'''LeetCode #784 Letter Case Permutation
Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.

Examples:
Input: S = "a1b2"
Output: ["a1b2", "a1B2", "A1b2", "A1B2"]

Input: S = "3z4"
Output: ["3z4", "3Z4"]

Input: S = "12345"
Output: ["12345"]
Note:

S will be a string with length between 1 and 12.
S will consist only of letters or digits.
'''

chars = 'a1b2'

def dfs(chars, nchars=None,ans=None):
  if nchars == None: nchars = chars
  if ans == None: ans = [chars]

  for i in range(len(nchars)):
    if nchars[i].isalpha():
      upper = nchars[i].upper()
      result = nchars[:i] + upper + nchars[i + 1:]
      if result not in ans:
        ans.append(result)
        dfs(chars,result,ans)
    
  return ans

print(dfs(chars))