'''LeetCode #216 Combination Sum III

Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.

All numbers will be positive integers.
The solution set must not contain duplicate combinations.

Input: k = 3, n = 7
Output: [[1,2,4]]

Input: k = 3, n = 9
Output: [[1,2,6], [1,3,5], [2,3,4]]
'''

k = 3
n = 9

def dfs(n,k,nums=None,ans=[],cur=[],index=0):
  if nums == None: nums = [num+1 for num in range(n-k)]

  for i in range(index,len(nums)):
    if nums[i] not in cur and len(cur + [nums[i]]) <= k:
      ncur = cur + [nums[i]]
      if sum(ncur) == n and len(ncur) == k:
        ans.append(ncur)
      dfs(n,k,nums,ans,ncur,i)

  return ans

print(dfs(n,k))